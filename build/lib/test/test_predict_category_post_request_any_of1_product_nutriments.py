# coding: utf-8

"""
    API Reference

    Robotoff provides a simple API allowing consumers to fetch predictions and annotate them.  All endpoints must be prefixed with `/api/v1`. The full URL is `https://robotoff.openfoodfacts.org/api/v1/{endpoint}`. 

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.predict_category_post_request_any_of1_product_nutriments import PredictCategoryPostRequestAnyOf1ProductNutriments

class TestPredictCategoryPostRequestAnyOf1ProductNutriments(unittest.TestCase):
    """PredictCategoryPostRequestAnyOf1ProductNutriments unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PredictCategoryPostRequestAnyOf1ProductNutriments:
        """Test PredictCategoryPostRequestAnyOf1ProductNutriments
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PredictCategoryPostRequestAnyOf1ProductNutriments`
        """
        model = PredictCategoryPostRequestAnyOf1ProductNutriments()
        if include_optional:
            return PredictCategoryPostRequestAnyOf1ProductNutriments(
                fat_100g = 1.337,
                saturated_fat_100g = 1.337,
                carbohydrates_100g = 1.337,
                sugars_100g = 1.337,
                fiber_100g = 1.337,
                proteins_100g = 1.337,
                salt_100g = 1.337,
                energy_kcal_100g = 1.337,
                fruits_vegetables_nuts_100g = 1.337
            )
        else:
            return PredictCategoryPostRequestAnyOf1ProductNutriments(
        )
        """

    def testPredictCategoryPostRequestAnyOf1ProductNutriments(self):
        """Test PredictCategoryPostRequestAnyOf1ProductNutriments"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
